{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?f439","webpack:///./src/components/CropTool.vue?824e","webpack:///./src/utils/simplifySecond.js","webpack:///./src/utils/formatTime.js","webpack:///./src/utils/throttle.js","webpack:///src/components/CropTool.vue","webpack:///./src/components/CropTool.vue?5e9b","webpack:///./src/components/CropTool.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_76c8be6b_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","_v","directives","rawName","expression","type","domProps","on","input","$event","target","composing","videoUrl","ref","src","controls","width","duration","playing","currentPlayingTime","currentTime","play","playVideo","pause","pauseVideo","stop","stopVideo","staticRenderFns","CropToolvue_type_template_id_27389f60_render","_l","item","index","class","getCropRangeClass","style","computedRangeStyle","getTimeHintClass","_s","getFormatTime","startTime","computedEndTimeIndicatorStyle","endTime","moving-cursor","showNormalCursorTimeHint","currentCursorOffsetX","currentCursorTime","durationText","listLength","language","CROP_CLIP_LIST","click","reset","toggleShowList","showList","_e","crop-time-body-hide","data-count","data-highlight","cropItemHoverIndex","getOriginalIndex","CUT_BEGIN_TIME","startTimeArr","startTimeChange","CUT_END_TIME","endTimeArr","endTimeChange","togglePlayClip","playingIndex","removeCropItem","data-index","renderList","focus","inputFocus","addCropItem","confirm-btn-disabled","isSendingCrop","confirmCrop","SENDING_DATA","CONFIRM_CUT_VIDEO","CropToolvue_type_template_id_27389f60_staticRenderFns","simplifySecond","seconds","date","Date","days","String","getUTCDate","padStart","hours","getUTCHours","minutes","getUTCMinutes","getUTCSeconds","time","times","join","getFormatTimeArr","restoreTimeFromTimeArr","timeArr","restoreOriginalTime","timeStr","split","formatTime","throttle","fn","delay","debounce","currCall","diff","scope","args","debounceNextCall","lastCall","lastExec","timer","exec","getTime","cb","arguments","thisDelay","thisDebounce","clearTimeout","setTimeout","clear","debounceDelay","containerLeft","containerWidth","isCursorClose","x1","x2","Math","abs","CropToolvue_type_script_lang_js_","components","props","Number","default","Boolean","timeLineContainer","undefined","sliderLength","timeToPixelRatio","cropItemList","startTimeIndicatorHoverIndex","endTimeIndicatorHoverIndex","startTimeIndicatorDraggingIndex","endTimeIndicatorDraggingIndex","currentEditingIndex","isCursorIn","isCropping","playingItem","infoLog","hasIllegalInputShowed","hasStartTimeInputErrorShowed","hasEndTimeInputError1Showed","hasEndTimeInputError2Showed","computed","reverse","watch","forceUpdateCropDataList","_isCropping","calculateTimeLineData","mounted","_this","$refs","$nextTick","addListeners","methods","className","isTimeIndicatorHovered","reversedIndex","forEach","startTimeIndicatorOffsetX","endTimeIndicatorOffsetX","rect","getBoundingClientRect","left","floor","getFormattedCropItem","startCropping","editingIndex","stopCropping","addNewCropItemInSlider","newCropItem","getFormattedOffsetX","offsetX","timeIndicatorCheck","mouseEvent","_this2","timeIndicatorMove","currentItem","updateCropItem","_this3","addEventListener","lastMouseDownOffsetX","e","utils_throttle","clientX","event","cropItemListIndex","timeArrIndex","console","log","updateAllCropItems","newItem","quarterTime","$emit","playSelectedClip","cleanCropItemList","sort","item1","item2","tempCropItemList","JSON","stringify","components_CropToolvue_type_script_lang_js_","component","componentNormalizer","options","__file","CropTool","Appvue_type_script_lang_js_","videoElement","video","ondurationchange","onplaying","onpause","ontimeupdate","seekVideo","seekTime","src_Appvue_type_script_lang_js_","App_component","App","Vue","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.099dc783.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"input-container\"},[_c('span',[_vm._v(\"视频链接：\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.videoUrl),expression:\"videoUrl\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.videoUrl)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.videoUrl=$event.target.value}}})]),_c('video',{ref:\"video\",attrs:{\"src\":_vm.videoUrl,\"controls\":\"\",\"width\":\"600px\"}}),_c('CropTool',{attrs:{\"duration\":_vm.duration,\"playing\":_vm.playing,\"currentPlayingTime\":_vm.currentTime},on:{\"play\":_vm.playVideo,\"pause\":_vm.pauseVideo,\"stop\":_vm.stopVideo}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"crop-container\"},[_c('div',{staticClass:\"crop-slider\"},[_c('div',{ref:\"timeLineContainer\",staticClass:\"crop-time-line-container\"},[_c('div',{staticClass:\"crop-time-line\"}),_vm._l((_vm.cropItemList),function(item,index){return _c('div',{key:index,class:_vm.getCropRangeClass(index),style:(_vm.computedRangeStyle(item))},[_c('div',{class:_vm.getTimeHintClass(index)},[_c('div',{staticClass:\"cursor-line\"}),_c('div',{staticClass:\"cursor-time\"},[_vm._v(_vm._s(_vm.getFormatTime(item.startTime)))])]),_c('div',{class:_vm.getTimeHintClass(index),style:(_vm.computedEndTimeIndicatorStyle(item))},[_c('div',{staticClass:\"cursor-line\"}),_c('div',{staticClass:\"cursor-time\"},[_vm._v(_vm._s(_vm.getFormatTime(item.endTime)))])])])}),_c('div',{class:['cursor-time-hint', {'moving-cursor': _vm.showNormalCursorTimeHint}],style:((\"transform: translateX(\" + _vm.currentCursorOffsetX + \"px)\"))},[_c('div',{staticClass:\"cursor-line\"}),_c('div',{staticClass:\"cursor-time\"},[_vm._v(_vm._s(_vm.getFormatTime(_vm.currentCursorTime)))])])],2),_c('div',{staticClass:\"media-duration\"},[_vm._v(_vm._s(_vm.durationText))])]),_c('div',{staticClass:\"crop-panel\"},[_c('div',{staticClass:\"crop-time-area\"},[(_vm.listLength > 1)?_c('div',{staticClass:\"crop-time-header\"},[_c('div',{staticClass:\"text\"},[_vm._v(_vm._s(_vm.language.CROP_CLIP_LIST))]),_c('button',{staticClass:\"small-btn\",on:{\"click\":function($event){_vm.reset()}}},[_vm._v(\"\\n                    清空\\n                \")]),_c('button',{staticClass:\"small-btn\",on:{\"click\":function($event){_vm.toggleShowList()}}},[_vm._v(\"\\n                    \"+_vm._s(_vm.showList ? '收起' : '展开')+\"\\n                \")])]):_vm._e(),_c('div',{class:['crop-time-body', {'crop-time-body-hide': !_vm.showList}],attrs:{\"data-count\":!_vm.showList ? 0 :(_vm.listLength > 10 ? 10 : _vm.listLength -1)}},[_vm._l((_vm.renderList),function(item,index){return [(index < _vm.listLength -1)?_c('div',{key:index,staticClass:\"crop-time-item\",attrs:{\"data-highlight\":_vm.cropItemHoverIndex === _vm.getOriginalIndex(index) ? 1 : 0}},[_c('div',{staticClass:\"time-area\"},[_c('div',{staticClass:\"time-input-area\"},[_c('span',{staticClass:\"time-text\"},[_vm._v(_vm._s(_vm.language.CUT_BEGIN_TIME)+\":\")]),_c('div',{staticClass:\"time-input\"},[_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":item.startTimeArr[0]},on:{\"input\":function($event){_vm.startTimeChange($event, _vm.getOriginalIndex(index), 0)}}}),_vm._v(\"\\n                                    :\\n                                    \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":item.startTimeArr[1]},on:{\"input\":function($event){_vm.startTimeChange($event, _vm.getOriginalIndex(index), 1)}}}),_vm._v(\"\\n                                    :\\n                                    \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":item.startTimeArr[2]},on:{\"input\":function($event){_vm.startTimeChange($event, _vm.getOriginalIndex(index), 2)}}})])]),_c('span',{staticClass:\"range-text\"},[_vm._v(\" ~ \")]),_c('div',{staticClass:\"time-input-area\"},[_c('span',{staticClass:\"time-text\"},[_vm._v(_vm._s(_vm.language.CUT_END_TIME)+\":\")]),_c('div',{staticClass:\"time-input\"},[_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":item.endTimeArr[0]},on:{\"input\":function($event){_vm.endTimeChange($event, _vm.getOriginalIndex(index), 0)}}}),_vm._v(\"\\n                                    :\\n                                    \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":item.endTimeArr[1]},on:{\"input\":function($event){_vm.endTimeChange($event, _vm.getOriginalIndex(index), 1)}}}),_vm._v(\"\\n                                    :\\n                                    \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":item.endTimeArr[2]},on:{\"input\":function($event){_vm.endTimeChange($event, index, 2)}}})])])]),_c('button',{staticClass:\"small-btn\",on:{\"click\":function($event){_vm.togglePlayClip(_vm.getOriginalIndex(index))}}},[_vm._v(\"\\n                            \"+_vm._s(_vm.playingIndex === _vm.getOriginalIndex(index) ? '暂停' : '播放')+\"\\n                        \")]),_c('button',{staticClass:\"small-btn\",on:{\"click\":function($event){_vm.removeCropItem(_vm.getOriginalIndex(index))}}},[_vm._v(\"\\n                            删除\\n                        \")])]):_vm._e()]})],2)]),_c('div',{staticClass:\"crop-time-item\",attrs:{\"data-highlight\":_vm.cropItemHoverIndex === 0 ? 1 : 0,\"data-index\":_vm.cropItemHoverIndex}},[_c('div',{staticClass:\"time-area\"},[_c('div',{staticClass:\"time-input-area\"},[_c('span',{staticClass:\"time-text\"},[_vm._v(_vm._s(_vm.language.CUT_BEGIN_TIME)+\":\")]),_c('div',{staticClass:\"time-input\"},[_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.renderList[_vm.listLength -1]\n                                && _vm.renderList[_vm.listLength -1].startTimeArr[0]},on:{\"input\":function($event){_vm.startTimeChange($event, 0, 0)},\"focus\":function($event){_vm.inputFocus()}}}),_vm._v(\"\\n                        :\\n                        \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.renderList[_vm.listLength -1]\n                                && _vm.renderList[_vm.listLength -1].startTimeArr[1]},on:{\"input\":function($event){_vm.startTimeChange($event, 0, 1)},\"focus\":function($event){_vm.inputFocus()}}}),_vm._v(\"\\n                        :\\n                        \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.renderList[_vm.listLength -1]\n                                && _vm.renderList[_vm.listLength -1].startTimeArr[2]},on:{\"input\":function($event){_vm.startTimeChange($event, 0, 2)},\"focus\":function($event){_vm.inputFocus()}}})])]),_c('span',{staticClass:\"range-text\"},[_vm._v(\" ~ \")]),_c('div',{staticClass:\"time-input-area\"},[_c('span',{staticClass:\"time-text\"},[_vm._v(_vm._s(_vm.language.CUT_END_TIME)+\":\")]),_c('div',{staticClass:\"time-input\"},[_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.renderList[_vm.listLength -1]\n                                && _vm.renderList[_vm.listLength -1].endTimeArr[0]},on:{\"input\":function($event){_vm.endTimeChange($event, 0, 0)},\"focus\":function($event){_vm.inputFocus()}}}),_vm._v(\"\\n                        :\\n                        \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.renderList[_vm.listLength -1]\n                                && _vm.renderList[_vm.listLength -1].endTimeArr[1]},on:{\"input\":function($event){_vm.endTimeChange($event, 0, 1)},\"focus\":function($event){_vm.inputFocus()}}}),_vm._v(\"\\n                        :\\n                        \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.renderList[_vm.listLength -1]\n                                && _vm.renderList[_vm.listLength -1].endTimeArr[2]},on:{\"input\":function($event){_vm.endTimeChange($event, 0, 2)},\"focus\":function($event){_vm.inputFocus()}}})])])]),_c('button',{staticClass:\"small-btn\",on:{\"click\":function($event){_vm.togglePlayClip(0)}}},[_vm._v(\"\\n                \"+_vm._s(_vm.playing && _vm.playingIndex === 0 ? '暂停' : '播放')+\"\\n            \")]),_c('button',{staticClass:\"small-btn\",on:{\"click\":function($event){_vm.addCropItem()}}},[_vm._v(\"\\n                添加\\n            \")])]),_c('div',{class:['confirm-btn', {'confirm-btn-disabled': _vm.isSendingCrop}],on:{\"click\":function($event){_vm.confirmCrop()}}},[_vm._v(_vm._s(_vm.isSendingCrop ? _vm.language.SENDING_DATA :_vm.language.CONFIRM_CUT_VIDEO)+\"\\n        \")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @file 常用于倒计时、或播放器的进度时长之类的\n * @author fengma1992\n */\nexport default function (seconds) {\n\n    const date = new Date(seconds * 1000);\n\n    return {\n        days: String(date.getUTCDate() - 1).padStart(2, '0'),\n        hours: String(date.getUTCHours()).padStart(2, '0'),\n        minutes: String(date.getUTCMinutes()).padStart(2, '0'),\n        seconds: String(date.getUTCSeconds()).padStart(2, '0')\n    };\n\n}","/*\n * @file 格式化时间\n * @author fengma1992\n */\nimport simplifySecond from './simplifySecond'\n\n\n/**\n * 将秒转换为HH:MM:SS格式字符串\n * @param time\n * @return {string}\n */\nconst getFormatTime = function (time) {\n    const times = simplifySecond(time < 0 ? 0 : time)\n\n    return [\n        times.hours,\n        times.minutes,\n        times.seconds\n    ].join(':')\n}\n\n/**\n * 将秒转换为[HH, MM, SS]格式数组\n * @param time\n * @return {array}\n */\nconst getFormatTimeArr = function (time) {\n    const times = simplifySecond(time < 0 ? 0 : time)\n\n    return [\n        times.hours,\n        times.minutes,\n        times.seconds\n    ]\n}\n\n/**\n * 将[HH, MM, SS]格式数组转换为秒\n * @param timeArr\n * @return {number}\n */\nconst restoreTimeFromTimeArr = function (timeArr) {\n    const time = +timeArr[0] * 3600 + +timeArr[1] * 60 + +timeArr[2]\n    return time > 0 ? time : 0\n}\n\n/**\n * 将HH:MM:SS格式字符串转换为秒\n * @param timeStr\n * @return {number}\n */\nconst restoreOriginalTime = function (timeStr) {\n    const timeArr = timeStr.split(':')\n    if (timeArr.length !== 3\n        || timeArr[0].length !== 2\n        || timeArr[1].length !== 2\n        || timeArr[2].length !== 2) {\n        return 0\n    }\n    const time = timeArr[0] * 3600 + timeArr[1] * 60 + timeArr[2]\n    return time > 0 ? time : 0\n}\n\nexport default {\n    getFormatTime,\n    getFormatTimeArr,\n    restoreTimeFromTimeArr,\n    restoreOriginalTime,\n}","/**\n * @file 节流函数\n * @author fengma1992\n * @date 2018/7/20\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\nfunction throttle (fn, delay, debounce) {\n\n    let currCall;\n    let lastCall = 0;\n    let lastExec = 0;\n    let timer = null;\n    let diff;\n    let scope;\n    let args;\n    let debounceNextCall;\n\n    delay = delay || 0;\n\n    function exec () {\n        lastExec = (new Date()).getTime();\n        timer = null;\n        fn.apply(scope, args || []);\n    }\n\n    let cb = function () {\n        currCall = (new Date()).getTime();\n        scope = this;\n        args = arguments;\n        let thisDelay = debounceNextCall || delay;\n        let thisDebounce = debounceNextCall || debounce;\n        debounceNextCall = null;\n        diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n        clearTimeout(timer);\n\n        if (thisDebounce) {\n            timer = setTimeout(exec, thisDelay);\n        }\n        else {\n            if (diff >= 0) {\n                exec();\n            }\n            else {\n                timer = setTimeout(exec, -diff);\n            }\n        }\n\n        lastCall = currCall;\n    };\n\n    /**\n     * Clear throttle.\n     * @public\n     */\n    cb.clear = function () {\n        if (timer) {\n            clearTimeout(timer);\n            timer = null;\n        }\n    };\n\n    /**\n     * Enable debounce once.\n     */\n    cb.debounceNextCall = function (debounceDelay) {\n        debounceNextCall = debounceDelay;\n    };\n\n    return cb;\n}\n\nexport default throttle;","<template>\n    <div class=\"crop-container\">\n        <div class=\"crop-slider\">\n            <div ref=\"timeLineContainer\" class=\"crop-time-line-container\">\n                <div class=\"crop-time-line\"></div>\n                    <div v-for=\"(item, index) in cropItemList\"\n                         :class=\"getCropRangeClass(index)\"\n                         :style=\"computedRangeStyle(item)\"\n                         :key=\"index\">\n                        <div :class=\"getTimeHintClass(index)\">\n                            <div class=\"cursor-line\"></div>\n                            <div class=\"cursor-time\">{{getFormatTime(item.startTime)}}</div>\n                        </div>\n                        <div :class=\"getTimeHintClass(index)\"\n                             :style=\"computedEndTimeIndicatorStyle(item)\">\n                            <div class=\"cursor-line\"></div>\n                            <div class=\"cursor-time\">{{getFormatTime(item.endTime)}}</div>\n                        </div>\n                    </div>\n                \n                <div :class=\"['cursor-time-hint', {'moving-cursor': showNormalCursorTimeHint}]\"\n                     :style=\"`transform: translateX(${currentCursorOffsetX}px)`\">\n                    <div class=\"cursor-line\"></div>\n                    <div class=\"cursor-time\">{{getFormatTime(currentCursorTime)}}</div>\n                </div>\n            </div>\n            <div class=\"media-duration\">{{durationText}}</div>\n        </div>\n        <div class=\"crop-panel\">\n            <div class=\"crop-time-area\">\n                <div v-if=\"listLength > 1\" class=\"crop-time-header\">\n                    <div class=\"text\">{{language.CROP_CLIP_LIST}}</div>\n                    <button class=\"small-btn\" @click=\"reset()\">\n                        清空\n                    </button>\n                    <button class=\"small-btn\" @click=\"toggleShowList()\">\n                        {{showList ? '收起' : '展开'}}\n                    </button>\n                </div>\n                <div :class=\"['crop-time-body', {'crop-time-body-hide': !showList}]\"\n                     :data-count=\"!showList ? 0 :(listLength > 10 ? 10 : listLength -1)\">\n                    <template v-for=\"(item, index) in renderList\">\n                        <div v-if=\"index < listLength -1\"\n                             :key=\"index\"\n                             :data-highlight=\"cropItemHoverIndex === getOriginalIndex(index) ? 1 : 0\"\n                             class=\"crop-time-item\">\n                            <div class=\"time-area\">\n                                <div class=\"time-input-area\">\n                                    <span class=\"time-text\">{{language.CUT_BEGIN_TIME}}:</span>\n                                    <div class=\"time-input\">\n                                        <input type=\"text\"\n                                               :value=\"item.startTimeArr[0]\"\n                                               @input=\"startTimeChange($event, getOriginalIndex(index), 0)\"/>\n                                        :\n                                        <input type=\"text\"\n                                               :value=\"item.startTimeArr[1]\"\n                                               @input=\"startTimeChange($event, getOriginalIndex(index), 1)\"/>\n                                        :\n                                        <input type=\"text\"\n                                               :value=\"item.startTimeArr[2]\"\n                                               @input=\"startTimeChange($event, getOriginalIndex(index), 2)\"/>\n                                    </div>\n                                </div>\n                                <span class=\"range-text\"> ~ </span>\n                                <div class=\"time-input-area\">\n                                    <span class=\"time-text\">{{language.CUT_END_TIME}}:</span>\n                                    \n                                    <div class=\"time-input\">\n                                        <input type=\"text\"\n                                               :value=\"item.endTimeArr[0]\"\n                                               @input=\"endTimeChange($event, getOriginalIndex(index), 0)\"/>\n                                        :\n                                        <input type=\"text\"\n                                               :value=\"item.endTimeArr[1]\"\n                                               @input=\"endTimeChange($event, getOriginalIndex(index), 1)\"/>\n                                        :\n                                        <input type=\"text\"\n                                               :value=\"item.endTimeArr[2]\"\n                                               @input=\"endTimeChange($event, index, 2)\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <button class=\"small-btn\" @click=\"togglePlayClip(getOriginalIndex(index))\">\n                                {{playingIndex === getOriginalIndex(index) ? '暂停' : '播放'}}\n                            </button>\n                            <button class=\"small-btn\" @click=\"removeCropItem(getOriginalIndex(index))\">\n                                删除\n                            </button>\n                        </div>\n                    </template>\n                </div>\n            </div>\n            <!--固定的裁剪第一项在底栏-->\n            <div class=\"crop-time-item\" :data-highlight=\"cropItemHoverIndex === 0 ? 1 : 0\"\n                 :data-index=\"cropItemHoverIndex\">\n                <div class=\"time-area\">\n                    <div class=\"time-input-area\">\n                        <span class=\"time-text\">{{language.CUT_BEGIN_TIME}}:</span>\n                        <div class=\"time-input\">\n                            <input type=\"text\"\n                                   :value=\"renderList[listLength -1]\n                                    && renderList[listLength -1].startTimeArr[0]\"\n                                   @input=\"startTimeChange($event, 0, 0)\"\n                                   @focus=\"inputFocus()\"/>\n                            :\n                            <input type=\"text\"\n                                   :value=\"renderList[listLength -1]\n                                    && renderList[listLength -1].startTimeArr[1]\"\n                                   @input=\"startTimeChange($event, 0, 1)\"\n                                   @focus=\"inputFocus()\"/>\n                            :\n                            <input type=\"text\"\n                                   :value=\"renderList[listLength -1]\n                                    && renderList[listLength -1].startTimeArr[2]\"\n                                   @input=\"startTimeChange($event, 0, 2)\"\n                                   @focus=\"inputFocus()\"/>\n                        </div>\n                    </div>\n                    <span class=\"range-text\"> ~ </span>\n                    <div class=\"time-input-area\">\n                        <span class=\"time-text\">{{language.CUT_END_TIME}}:</span>\n                        <div class=\"time-input\">\n                            <input type=\"text\"\n                                   :value=\"renderList[listLength -1]\n                                    && renderList[listLength -1].endTimeArr[0]\"\n                                   @input=\"endTimeChange($event, 0, 0)\"\n                                   @focus=\"inputFocus()\"/>\n                            :\n                            <input type=\"text\"\n                                   :value=\"renderList[listLength -1]\n                                    && renderList[listLength -1].endTimeArr[1]\"\n                                   @input=\"endTimeChange($event, 0, 1)\"\n                                   @focus=\"inputFocus()\"/>\n                            :\n                            <input type=\"text\"\n                                   :value=\"renderList[listLength -1]\n                                    && renderList[listLength -1].endTimeArr[2]\"\n                                   @input=\"endTimeChange($event, 0, 2)\"\n                                   @focus=\"inputFocus()\"/>\n                        </div>\n                    </div>\n                </div>\n                \n                <button class=\"small-btn\" @click=\"togglePlayClip(0)\">\n                    {{playing && playingIndex === 0 ? '暂停' : '播放'}}\n                </button>\n                <button class=\"small-btn\" @click=\"addCropItem()\">\n                    添加\n                </button>\n            </div>\n            <div :class=\"['confirm-btn', {'confirm-btn-disabled': isSendingCrop}]\"\n                 @click=\"confirmCrop()\">{{isSendingCrop ? language.SENDING_DATA :language.CONFIRM_CUT_VIDEO}}\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import formatTime from '../utils/formatTime'\n    import simplifySecond from '../utils/simplifySecond'\n    import throttle from '../utils/throttle'\n\n    // 容器距页面左侧距离，用于测量鼠标event中的x距离\n    let containerLeft = 0\n    // 容器宽度\n    let containerWidth = 0\n\n    /**\n     * 检测鼠标是否接近\n     * @param x1\n     * @param x2\n     */\n    const isCursorClose = function (x1, x2) {\n        return Math.abs(x1 - x2) < 2\n    }\n\n    export default {\n        name: 'crop-tool',\n        components: {},\n        props: {\n            duration: {\n                type: Number,\n                default: 0\n            },\n            currentPlayingTime: {\n                type: Number,\n                default: 0\n            },\n            playing: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data () {\n            return {\n                cropItemHoverIndex: -1,\n                timeLineContainer: undefined,\n                sliderLength: 0,\n\n                timeToPixelRatio: 1,\n                cropItemList: [\n                    // {\n                    //     startTime: 0,\n                    //     endTime: 100,\n                    //     startTimeArr: [hours, minutes, seconds],\n                    //     endTimeArr: [hours, minutes, seconds],\n                    //     startTimeIndicatorOffsetX: 0,\n                    //     endTimeIndicatorOffsetX: 100,\n                    // }\n                ],\n                startTimeIndicatorHoverIndex: -1,\n                endTimeIndicatorHoverIndex: -1,\n                startTimeIndicatorDraggingIndex: -1,\n                endTimeIndicatorDraggingIndex: -1,\n                currentEditingIndex: 0,\n                currentCursorTime: 0,\n                currentCursorOffsetX: 0,\n                isCursorIn: false,\n                isCropping: false,\n\n                language: {\n                    CROP_CLIP_LIST: '裁剪列表',\n                    CUT_BEGIN_TIME: '开始时间',\n                    CUT_END_TIME: '结束时间',\n                    SENDING_DATA: '裁剪中',\n                    CONFIRM_CUT_VIDEO: '裁剪'\n                },\n                playingIndex: -1,\n                showList: false,\n                playingItem: undefined,\n                isSendingCrop: false,\n                infoLog: {\n                    hasIllegalInputShowed: false,\n                    hasStartTimeInputErrorShowed: false,\n                    hasEndTimeInputError1Showed: false,\n                    hasEndTimeInputError2Showed: false,\n                },\n            }\n        },\n\n        computed: {\n            listLength () {\n                return this.cropItemList.length\n            },\n            durationText () {\n                return this.getFormatTime(this.duration)\n            },\n\n            showNormalCursorTimeHint () {\n                return this.isCursorIn\n                    && !this.isCropping\n                    && !~this.startTimeIndicatorHoverIndex\n                    && !~this.endTimeIndicatorHoverIndex\n            },\n\n            /**\n             * 将itemList进行reverse，HTML好看\n             * @return {*}\n             */\n            renderList: function () {\n                const cropItemList = this.cropItemList.slice(0)\n                return cropItemList.reverse()\n            },\n        },\n\n        watch: {\n            timeToPixelRatio () {\n                this.forceUpdateCropDataList()\n            },\n\n            /**\n             * 监测播放进度，达到片段末尾就暂停\n             */\n            currentPlayingTime (currentTime) {\n                const playingItem = this.playingItem\n                if (!playingItem) {\n                    return\n                }\n                if (currentTime >= playingItem.endTime) {\n                    this.pause()\n                }\n            },\n\n            isCropping (isCropping) {\n                if (isCropping) {\n                    this.playingItem = null\n                    this.playingIndex = -1\n                }\n            },\n\n            duration () {\n                // 时长更新后需更新界面\n                this.calculateTimeLineData()\n            },\n        },\n\n        mounted () {\n            // 获取容器距页面左侧距离，用于后续鼠标event的x位置计算\n            this.timeLineContainer = this.$refs.timeLineContainer\n\n            this.$nextTick(() => {\n\n                this.calculateTimeLineData()\n\n                this.addListeners()\n            })\n        },\n\n        methods: {\n\n\n            getCropRangeClass (index) {\n                let className = 'crop-range'\n\n                if (this.cropItemHoverIndex === index) {\n                    className += ' crop-range-hover'\n\n                    if (this.isCropping) {\n                        className += ' crop-range-dragging'\n                    }\n                }\n\n                return className\n            },\n\n            getTimeHintClass (index) {\n                let className = 'cursor-time-hint'\n\n                if (this.isTimeIndicatorHovered(index)) {\n                    className += ' crop-moving-cursor'\n                }\n                else {\n                    className += this.currentEditingIndex === index ? ' cropping' : ''\n                }\n\n                return className\n            },\n\n            /**\n             * 根据renderList的index获得cropItemList的index\n             */\n            getOriginalIndex (reversedIndex) {\n                return this.listLength - 1 - reversedIndex\n            },\n\n            /**\n             * 界面重新布局后需重新计算offsetX数据\n             */\n            forceUpdateCropDataList () {\n                if (!this.listLength) {\n                    return\n                }\n\n                const cropItemList = this.cropItemList\n                const duration = this.duration\n                const timeToPixelRatio = this.timeToPixelRatio\n                cropItemList.forEach(item => {\n                    let startTime = item.startTime\n                    let endTime = item.endTime\n                    if (!startTime || startTime < 0 || startTime >= duration) {\n                        startTime = 0\n                    }\n                    if (!endTime || endTime < startTime || endTime > duration) {\n                        endTime = duration\n                    }\n                    item.startTimeIndicatorOffsetX = startTime / timeToPixelRatio\n                    item.endTimeIndicatorOffsetX = endTime / timeToPixelRatio\n                })\n                this.cropItemList = cropItemList.slice(0)\n            },\n\n            calculateTimeLineData () {\n                if (!this.timeLineContainer) {\n                    return\n                }\n                const duration = this.duration\n\n                const rect = this.timeLineContainer.getBoundingClientRect()\n                containerLeft = rect.left\n                containerWidth = Math.floor(rect.width)\n\n                this.sliderLength = containerWidth\n                this.timeToPixelRatio = duration / containerWidth\n            },\n\n            getFormatTime (time) {\n                const times = simplifySecond(time < 0 ? 0 : time)\n\n                return [\n                    times.hours,\n                    times.minutes,\n                    times.seconds\n                ].join(':')\n            },\n\n            isTimeIndicatorHovered (index) {\n                return this.startTimeIndicatorDraggingIndex === index\n                    || this.startTimeIndicatorHoverIndex === index\n                    || this.endTimeIndicatorDraggingIndex === index\n                    || this.endTimeIndicatorHoverIndex === index\n            },\n\n            computedRangeStyle (item) {\n                return 'transform: translateX('\n                    + item.startTimeIndicatorOffsetX\n                    + 'px); width:'\n                    + (item.endTimeIndicatorOffsetX - item.startTimeIndicatorOffsetX)\n                    + 'px'\n            },\n\n            computedEndTimeIndicatorStyle (item) {\n                return 'transform: translateX('\n                    + (item.endTimeIndicatorOffsetX - item.startTimeIndicatorOffsetX)\n                    + 'px)'\n            },\n\n            getFormattedCropItem (startTime, endTime) {\n                const duration = this.duration\n                const timeToPixelRatio = this.timeToPixelRatio\n                if (!startTime || startTime < 0 || startTime > duration) {\n                    startTime = 0\n                }\n                if (endTime === undefined || endTime < startTime || endTime > duration) {\n                    endTime = duration\n                }\n\n                return {\n                    startTime: startTime,\n                    endTime: endTime,\n                    startTimeArr: formatTime.getFormatTimeArr(startTime),\n                    endTimeArr: formatTime.getFormatTimeArr(endTime),\n                    startTimeIndicatorOffsetX: startTime / timeToPixelRatio,\n                    endTimeIndicatorOffsetX: endTime / timeToPixelRatio,\n                }\n            },\n\n            /**\n             * 鼠标点击抬起后开始裁剪\n             * @param editingIndex {number} 当前裁剪item位置\n             */\n            startCropping (editingIndex) {\n                // 开始裁剪后默认控制结束时标\n                this.endTimeIndicatorDraggingIndex = editingIndex\n                this.currentEditingIndex = editingIndex\n                this.cropItemHoverIndex = editingIndex\n                this.isCropping = true\n\n                // 添加一项后列表项肯定存在了\n                this.showList = true\n            },\n\n            stopCropping () {\n                this.startTimeIndicatorDraggingIndex = -1\n                this.endTimeIndicatorDraggingIndex = -1\n                this.currentEditingIndex = -1\n                this.cropItemHoverIndex = -1\n                this.isCropping = false\n            },\n\n            /**\n             * 点击时间条新增裁剪\n             * @param currentCursorOffsetX\n             */\n            addNewCropItemInSlider () {\n                const currentCursorTime = this.currentCursorTime\n                const newCropItem = this.getFormattedCropItem(currentCursorTime, currentCursorTime)\n                this.cropItemList.push(newCropItem)\n            },\n\n            /**\n             * 将offsetX限定到时间条内\n             */\n            getFormattedOffsetX (offsetX) {\n                if (offsetX < 0) {\n                    return 0\n                }\n                if (offsetX >= containerWidth) {\n                    return containerWidth\n                }\n                return offsetX\n            },\n\n            timeIndicatorCheck (currentCursorOffsetX, mouseEvent) {\n                // 在裁剪状态，直接返回\n                if (this.isCropping) {\n                    return\n                }\n\n                // 鼠标移动，重设hover状态\n                this.startTimeIndicatorHoverIndex = -1\n                this.endTimeIndicatorHoverIndex = -1\n                this.startTimeIndicatorDraggingIndex = -1\n                this.endTimeIndicatorDraggingIndex = -1\n                this.cropItemHoverIndex = -1\n\n                this.cropItemList.forEach((item, index) => {\n                    if (currentCursorOffsetX >= item.startTimeIndicatorOffsetX\n                        && currentCursorOffsetX <= item.endTimeIndicatorOffsetX) {\n                        this.cropItemHoverIndex = index\n                    }\n\n                    // 默认始末时间戳在一起时优先选中截止时间戳\n                    if (isCursorClose(item.endTimeIndicatorOffsetX, currentCursorOffsetX)) {\n                        this.endTimeIndicatorHoverIndex = index\n                        // 鼠标放下，开始裁剪\n                        if (mouseEvent === 'mousedown') {\n                            this.endTimeIndicatorDraggingIndex = index\n                            this.currentEditingIndex = index\n                            this.isCropping = true\n                        }\n                    }\n\n                    else if (isCursorClose(item.startTimeIndicatorOffsetX, currentCursorOffsetX)) {\n                        this.startTimeIndicatorHoverIndex = index\n                        // 鼠标放下，开始裁剪\n                        if (mouseEvent === 'mousedown') {\n                            this.startTimeIndicatorDraggingIndex = index\n                            this.currentEditingIndex = index\n                            this.isCropping = true\n                        }\n                    }\n                })\n            },\n\n            timeIndicatorMove (currentCursorOffsetX) {\n                // 裁剪状态，随动时间戳\n                if (this.isCropping) {\n                    const currentEditingIndex = this.currentEditingIndex\n                    const startTimeIndicatorDraggingIndex = this.startTimeIndicatorDraggingIndex\n                    const endTimeIndicatorDraggingIndex = this.endTimeIndicatorDraggingIndex\n                    const currentCursorTime = this.currentCursorTime\n\n                    let currentItem = this.cropItemList[currentEditingIndex]\n                    // 操作起始位时间戳\n                    if (startTimeIndicatorDraggingIndex > -1 && currentItem) {\n                        // 已到截止位时间戳则直接返回\n                        if (currentCursorOffsetX > currentItem.endTimeIndicatorOffsetX) {\n                            return\n                        }\n                        currentItem.startTimeIndicatorOffsetX = currentCursorOffsetX\n                        currentItem.startTime = currentCursorTime\n                    }\n\n                    // 操作截止位时间戳\n                    if (endTimeIndicatorDraggingIndex > -1 && currentItem) {\n                        // 已到起始位时间戳则直接返回\n                        if (currentCursorOffsetX < currentItem.startTimeIndicatorOffsetX) {\n                            return\n                        }\n                        currentItem.endTimeIndicatorOffsetX = currentCursorOffsetX\n                        currentItem.endTime = currentCursorTime\n                    }\n                    this.updateCropItem(currentItem, currentEditingIndex)\n                }\n            },\n            addListeners () {\n                window.addEventListener('resize', this.calculateTimeLineData.bind(this))\n\n                if (!this.timeLineContainer) {\n                    return\n                }\n                let lastMouseDownOffsetX = null\n                this.timeLineContainer.addEventListener('mousemove', e => {\n                    throttle(() => {\n                        const currentCursorOffsetX = e.clientX - containerLeft\n\n                        // mousemove范围检测\n                        if (currentCursorOffsetX < 0 || currentCursorOffsetX > containerWidth) {\n                            this.isCursorIn = false\n                            // 鼠标拖拽状态到达边界直接触发mouseup状态\n                            if (this.isCropping) {\n                                this.stopCropping()\n                                this.timeIndicatorCheck(currentCursorOffsetX < 0 ? 0 : containerWidth, 'mouseup')\n                            }\n                            return\n                        }\n                        else {\n                            this.isCursorIn = true\n                        }\n\n                        this.currentCursorTime = currentCursorOffsetX * this.timeToPixelRatio\n                        this.currentCursorOffsetX = currentCursorOffsetX\n\n                        this.timeIndicatorCheck(currentCursorOffsetX, 'mousemove')\n                        this.timeIndicatorMove(currentCursorOffsetX)\n\n                    }, 10, true)()\n\n                })\n                this.timeLineContainer.addEventListener('mousedown', e => {\n                    const currentCursorOffsetX = e.clientX - containerLeft\n                    lastMouseDownOffsetX = currentCursorOffsetX\n                    this.timeIndicatorCheck(currentCursorOffsetX, 'mousedown')\n                })\n                this.timeLineContainer.addEventListener('mouseup', e => {\n\n                    // 已经处于裁剪状态时，鼠标抬起，则裁剪状态取消\n                    if (this.isCropping) {\n                        this.stopCropping()\n                        return\n                    }\n\n                    const currentCursorOffsetX = this.getFormattedOffsetX(e.clientX - containerLeft)\n                    // mousedown与mouseup位置不一致，则不认为是点击,直接返回\n                    if (Math.abs(currentCursorOffsetX - lastMouseDownOffsetX) > 3) {\n                        return\n                    }\n\n                    // 更新当前鼠标指向的时间\n                    this.currentCursorTime = currentCursorOffsetX * this.timeToPixelRatio\n\n                    // 鼠标点击新增裁剪片段\n                    if (!this.isCropping) {\n                        this.addNewCropItemInSlider()\n\n                        // 新操作位置为数组最后一位\n                        this.startCropping(this.cropItemList.length - 1)\n                    }\n                })\n            },\n\n\n            /**\n             * 用户点击第一条时间输入框时无数据则预增加一条数据\n             */\n            inputFocus () {\n                if (!this.listLength) {\n                    this.addCropItem()\n                }\n            },\n\n            startTimeChange (event, cropItemListIndex, timeArrIndex) {\n                const value = Math.floor(+event.target.value)\n                const cropItemList = this.cropItemList.slice(0)\n                const currentItem = cropItemList[cropItemListIndex]\n                // 判断输入值超出范围或NaN,恢复原值\n                if (value < 0 || value > 59 || value !== value) {\n                    console.log('不合法的输入值')\n                }\n                else {\n                    // 输出用户自定义值\n                    currentItem.startTimeArr[timeArrIndex] = String(value).padStart(2, '0')\n                    currentItem.startTime = formatTime.restoreTimeFromTimeArr(currentItem.startTimeArr)\n                    // 开始时间不能大于结束时间\n                    if (currentItem.startTime > currentItem.endTime) {\n                        currentItem.startTime = currentItem.endTime - 1\n                        currentItem.startTimeArr = formatTime.getFormatTimeArr(currentItem.startTime)\n\n                        console.log('起始值必须小于结束值')\n                    }\n\n                    this.updateCropItem(currentItem, cropItemListIndex)\n                }\n                event.target.value = currentItem.startTimeArr[timeArrIndex]\n            },\n\n            endTimeChange (event, cropItemListIndex, timeArrIndex) {\n                const value = Math.floor(+event.target.value)\n                const cropItemList = this.cropItemList.slice(0)\n                const currentItem = cropItemList[cropItemListIndex]\n                // 判断输入值超出范围或NaN,恢复原值\n                if (value < 0 || value > 59 || value !== value) {\n                    console.log('不合法的输入值')\n                }\n                else {\n                    // 输出用户自定义值\n                    currentItem.endTimeArr[timeArrIndex] = String(value).padStart(2, '0')\n                    currentItem.endTime = formatTime.restoreTimeFromTimeArr(currentItem.endTimeArr)\n                    // 结束时间不能小于开始时间\n                    if (currentItem.endTime < currentItem.startTime) {\n                        currentItem.endTime = +currentItem.startTime + 1\n                        currentItem.endTimeArr = formatTime.getFormatTimeArr(currentItem.endTime)\n\n                        console.log('结束值必须大于起始值')\n                    }\n                    // 结束时间不能大于总时长\n                    const duration = this.duration\n                    if (currentItem.endTime > duration) {\n\n                        console.log('结束值不能大于总时长')\n\n                        currentItem.endTime = duration\n                        currentItem.endTimeArr = formatTime.getFormatTimeArr(duration)\n                    }\n\n                    this.updateCropItem(currentItem, cropItemListIndex)\n                }\n                event.target.value = currentItem.endTimeArr[timeArrIndex]\n            },\n            /**\n             * 切换列表展示\n             */\n            toggleShowList () {\n                this.showList = !this.showList\n            },\n\n\n            /**\n             * 更新全部裁剪\n             */\n            updateAllCropItems (cropItemList) {\n                this.cropItemList = cropItemList\n                this.forceUpdateCropDataList()\n            },\n\n            /**\n             * 更新单个裁剪\n             */\n            updateCropItem (item, index) {\n                const newItem = this.getFormattedCropItem(item.startTime, item.endTime)\n                this.cropItemList.splice(index, 1, newItem)\n            },\n\n            /**\n             * 移除单个裁剪\n             * @param index\n             */\n            removeCropItem (index) {\n                this.cropItemList.splice(index, 1)\n            },\n\n            /**\n             * 添加一个空裁剪\n             */\n            addCropItem () {\n                this.showList = true\n                // 默认添加的时间为1/4到 3/4，到边缘时用户鼠标不好选中时间条\n                const quarterTime = this.duration / 4\n                const newItem = this.getFormattedCropItem(quarterTime, quarterTime * 3)\n                this.cropItemList.push(newItem)\n            },\n\n            /**\n             * 重置\n             */\n            reset () {\n                this.cropItemList = []\n                this.cropItemHoverIndex = -1\n                this.startTimeIndicatorHoverIndex = -1\n                this.endTimeIndicatorHoverIndex = -1\n                this.startTimeIndicatorDraggingIndex = -1\n                this.endTimeIndicatorDraggingIndex = -1\n                this.currentEditingIndex = 0\n                this.currentCursorTime = 0\n                this.currentCursorOffsetX = 0\n                this.isCursorIn = false\n                this.isCropping = false\n                this.showList = false\n                this.playingItem = undefined\n                this.playingIndex = -1\n                this.isSendingCrop = false\n                this.$emit('stop')\n            },\n\n            /**\n             * 切换片段播放暂停\n             * @param index\n             */\n            togglePlayClip (index) {\n                if (this.playingItem) {\n                    this.pause()\n                }\n                else {\n                    this.playSelectedClip(index)\n                }\n            },\n\n            /**\n             * 播放选中片段\n             * @param index\n             */\n            playSelectedClip (index) {\n                if (!this.listLength) {\n                    console.log('无裁剪片段')\n                    return\n                }\n                this.playingItem = this.cropItemList[index]\n                this.playingIndex = index\n                if (!this.playingItem) {\n                    return\n                }\n                this.isCropping = false\n\n                const startTime = this.playingItem.startTime\n\n                this.$emit('play', startTime || 0)\n            },\n\n            pause () {\n                this.$emit('pause')\n            },\n\n            /**\n             * cropItemList排序并去重\n             */\n            cleanCropItemList () {\n                let cropItemList = this.cropItemList\n\n                // 1. 依据startTime由小到大排序\n                cropItemList = cropItemList.sort(function (item1, item2) {\n                    return item1.startTime - item2.startTime\n                })\n\n                let tempCropItemList = []\n                let startTime = cropItemList[0].startTime\n                let endTime = cropItemList[0].endTime\n\n\n                // 遍历，删除重复片段\n                cropItemList.forEach(item => {\n\n                    // currentItem片段包含item\n                    if (item.endTime <= endTime && item.startTime >= startTime) {\n                        return\n                    }\n                    // currentItem片段与item有重叠\n                    if (item.startTime <= endTime && item.endTime >= endTime) {\n                        endTime = item.endTime\n                        return\n                    }\n                    // currentItem片段与item无重叠,向列表添加一项，更新记录参数\n                    if (item.startTime > endTime) {\n                        tempCropItemList.push({\n                            startTime: startTime,\n                            endTime: endTime,\n                            startTimeArr: formatTime.getFormatTimeArr(startTime),\n                            endTimeArr: formatTime.getFormatTimeArr(endTime),\n                        })\n\n                        startTime = item.startTime\n                        endTime = item.endTime\n                    }\n                })\n\n                // 遍历完成，将最后的时间片段写入列表\n                tempCropItemList.push({\n                    startTime: startTime,\n                    endTime: endTime,\n                    startTimeArr: formatTime.getFormatTimeArr(startTime),\n                    endTimeArr: formatTime.getFormatTimeArr(endTime),\n                })\n\n                return tempCropItemList\n            },\n\n            /**\n             * 确认裁剪\n             */\n            confirmCrop () {\n\n                if (this.isSendingCrop) {\n                    console.log('裁剪中')\n                    return\n                }\n\n                if (!this.listLength) {\n                    console.log('无裁剪片段')\n                    return\n                }\n\n                let cropItemList = this.cropItemList\n\n                this.isSendingCrop = true\n\n                const tempCropItemList = this.cleanCropItemList()\n\n\n                // 更新全部裁剪片段\n                if (JSON.stringify(tempCropItemList) !== JSON.stringify(cropItemList)) {\n                    console.log('存在重复裁剪，已自动为您优化')\n                    this.updateAllCropItems(tempCropItemList)\n                }\n\n                this.isSendingCrop = false\n                // 输出裁剪片段\n                return tempCropItemList\n            }\n        },\n    }\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CropTool.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CropTool.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CropTool.vue?vue&type=template&id=27389f60&\"\nimport script from \"./CropTool.vue?vue&type=script&lang=js&\"\nexport * from \"./CropTool.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"CropTool.vue\"\nexport default component.exports","<template>\n    <div id=\"app\">\n        <div class=\"input-container\">\n            <span>视频链接：</span>\n            <input type=\"text\" v-model=\"videoUrl\"/>\n        </div>\n        <video ref=\"video\" :src=\"videoUrl\" controls width=\"600px\"></video>\n        <CropTool :duration=\"duration\"\n                  :playing=\"playing\"\n                  :currentPlayingTime=\"currentTime\"\n                  @play=\"playVideo\"\n                  @pause=\"pauseVideo\"\n                  @stop=\"stopVideo\"/>\n    </div>\n</template>\n\n<script>\n    import CropTool from './components/CropTool.vue'\n    \n    export default {\n        name: 'app',\n        components: {\n            CropTool,\n        },\n        data () {\n            return {\n                videoUrl: 'http://vali-dns.cp31.ott.cibntv.net/6571751077B357154347F2AAE/03000B02005A5C3D0CA21A2FCEFF56AB3BD1DC-87E0-0D7E-3F5F-21BE72E481E7.mp4',\n                duration: 0,\n                playing: false,\n                currentTime: 0\n            }\n        },\n        mounted () {\n            const videoElement = this.$refs.video\n            videoElement.ondurationchange = () => {\n                this.duration = videoElement.duration\n            }\n            videoElement.onplaying = () => {\n                this.playing = true\n            }\n            videoElement.onpause = () => {\n                this.playing = false\n            }\n            videoElement.ontimeupdate = () => {\n                this.currentTime = videoElement.currentTime\n            }\n        },\n        methods: {\n            seekVideo (seekTime) {\n                this.$refs.video.currentTime = seekTime\n            },\n            playVideo (time) {\n                this.seekVideo(time)\n                this.$refs.video.play()\n            },\n            pauseVideo () {\n                this.$refs.video.pause()\n            },\n            stopVideo () {\n                this.$refs.video.pause()\n                this.$refs.video.currentTime = 0\n            }\n        },\n    }\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=76c8be6b&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport './index.scss'\n\nVue.config.productionTip = false\n\nnew Vue({\n    render: h => h(App)\n}).$mount('#app')\n"],"sourceRoot":""}